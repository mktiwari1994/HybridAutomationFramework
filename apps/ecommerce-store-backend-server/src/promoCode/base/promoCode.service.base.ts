/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, PromoCode as PrismaPromoCode } from "@prisma/client";

export class PromoCodeServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PromoCodeCountArgs, "select">
  ): Promise<number> {
    return this.prisma.promoCode.count(args);
  }

  async promoCodes(
    args: Prisma.PromoCodeFindManyArgs
  ): Promise<PrismaPromoCode[]> {
    return this.prisma.promoCode.findMany(args);
  }
  async promoCode(
    args: Prisma.PromoCodeFindUniqueArgs
  ): Promise<PrismaPromoCode | null> {
    return this.prisma.promoCode.findUnique(args);
  }
  async createPromoCode(
    args: Prisma.PromoCodeCreateArgs
  ): Promise<PrismaPromoCode> {
    return this.prisma.promoCode.create(args);
  }
  async updatePromoCode(
    args: Prisma.PromoCodeUpdateArgs
  ): Promise<PrismaPromoCode> {
    return this.prisma.promoCode.update(args);
  }
  async deletePromoCode(
    args: Prisma.PromoCodeDeleteArgs
  ): Promise<PrismaPromoCode> {
    return this.prisma.promoCode.delete(args);
  }
}
